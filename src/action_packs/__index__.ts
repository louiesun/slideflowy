// This file generated by `scripts/action_pack_index_generator.ts#generateActionsRequireFile`
// Don't modify it

import * as app from './app'
export { app }
import * as fileHistory from './file_history'
export { fileHistory }
import * as file from './file'
export { file }
import * as nodeEdit from './node_edit'
export { nodeEdit }
import * as projectNode from './project_node'
export { projectNode }
import * as slide from './slide'
export { slide }

export type Actions =
  | projectNode.Actions
  | fileHistory.Actions
  | app.Actions
  | file.Actions
  | nodeEdit.Actions
  | slide.Actions

export type State =
  & projectNode.State
  & fileHistory.State
  & app.State
  & file.State
  & nodeEdit.State
  & slide.State

export const reducer: <S>(state: S, action: AnyAction) => S = composeReducer<any>(
  projectNode.reducer,
  fileHistory.reducer,
  app.reducer,
  file.reducer,
  nodeEdit.reducer,
  slide.reducer,
)

import { combineEpics } from 'redux-observable'
export const epic = combineEpics(
  projectNode.epic,
  fileHistory.epic,
  app.epic,
  file.epic,
  nodeEdit.epic,
)

import { Reducer, AnyAction } from 'redux'
export function composeReducer<S = any>(...reducers: (Reducer<S, AnyAction>)[]) {
  return (state: S, action: AnyAction) =>
    reducers.reduce((s, r) => r(s, action), state)
}
