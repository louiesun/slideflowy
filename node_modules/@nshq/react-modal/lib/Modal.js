"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useModal = exports.Modal = void 0;
const react_1 = require("react");
const React = __importStar(require("react"));
const react_portal_1 = require("@nshq/react-portal");
require("./Modal.css");
const Modal = function Modal(props) {
    const { visible, onVisibleChange } = props;
    const { documentElementClassName, documentElementClassNameWhenVisible, documentElementClassNameWhenInvisible, } = props;
    (0, react_1.useEffect)(() => {
        const classNames = [documentElementClassName];
        if (visible && documentElementClassNameWhenVisible) {
            classNames.push(documentElementClassNameWhenVisible);
        }
        if (!visible && documentElementClassNameWhenInvisible) {
            classNames.push(documentElementClassNameWhenInvisible);
        }
        const finalClassNames = classNames.join(' ').split(' ');
        document.documentElement.classList.add(...finalClassNames);
        return () => {
            document.documentElement.classList.remove(...finalClassNames);
        };
    }, [
        visible,
        documentElementClassName,
        documentElementClassNameWhenVisible,
        documentElementClassNameWhenInvisible,
    ]);
    const { backdrop, backdropRef, backdropClassName } = props;
    const backdropElem = (0, react_1.useMemo)(() => !backdrop ? null : (React.createElement("div", { ref: backdropRef, className: backdropClassName, onClick: (event) => {
            if (backdrop === 'static')
                return;
            onVisibleChange(false, { event: event.nativeEvent });
        } })), [backdrop, backdropRef, backdropClassName, onVisibleChange]);
    const { portalRef, portalClassName, partalParent, bodyRef, bodyClassName, children, } = props;
    const portal = (0, react_1.useMemo)(() => (React.createElement(react_portal_1.Portal, { ref: portalRef, className: portalClassName, visible: visible, onVisibleChange: onVisibleChange, parent: partalParent },
        backdropElem,
        React.createElement("div", { ref: bodyRef, className: bodyClassName }, children))), [
        portalRef,
        portalClassName,
        visible,
        onVisibleChange,
        partalParent,
        backdropElem,
        bodyRef,
        bodyClassName,
        children,
    ]);
    return portal;
};
exports.Modal = Modal;
exports.Modal.defaultProps = {
    backdrop: 'clickHide',
    documentElementClassName: 'Modal__html',
    documentElementClassNameWhenVisible: 'Modal__html--visible',
    documentElementClassNameWhenInvisible: null,
    portalClassName: 'Modal',
    backdropClassName: 'Modal__backdrop',
    bodyClassName: 'Modal__body',
};
function useModal(_a) {
    var { onVisibleChange: _, visible: initialVisible = false, children } = _a, props = __rest(_a, ["onVisibleChange", "visible", "children"]);
    const [visible, setVisible] = (0, react_1.useState)(initialVisible);
    const ctrl = (0, react_1.useMemo)(() => ({
        visible,
        setVisible,
        show: () => setVisible(true),
        hide: () => setVisible(false),
    }), [visible]);
    const renderedChildren = (0, react_1.useMemo)(() => typeof children === 'function' && children(ctrl), [children, ctrl]);
    const instance = (React.createElement(exports.Modal, Object.assign({ visible: visible, onVisibleChange: setVisible }, props), renderedChildren));
    return [instance, ctrl];
}
exports.useModal = useModal;
